<?php

namespace kenjis\OreOrePHP\Router;

use Mockery as m;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-01-19 at 12:30:20.
 */
class PuxTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Pux
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        m::close();
    }

    /**
     * @covers kenjis\OreOrePHP\Router\Pux::getRoute
     */
    public function testGetRoute_Controller_Method_Param()
    {
        $request = m::mock('kenjis\OreOrePHP\Request');
        $request->shouldReceive('getServer')->with('USE_MUX')->andReturn(null);
        $request->shouldReceive('getServer')->with('PATH_INFO')->andReturn('/hello/say/ore');
        $object = new Pux($request);
        
        $test = $object->getRoute();
        $expected = ['Hello', 'actionSay', ['ore', null, null]];
        $this->assertEquals($expected, $test);
    }
    
    /**
     * @covers kenjis\OreOrePHP\Router\Pux::getRoute
     */
    public function testGetRoute_USE_MUX_On()
    {
        $request = m::mock('kenjis\OreOrePHP\Request');
        $request->shouldReceive('getServer')->with('USE_MUX')->andReturn('1');
        $request->shouldReceive('getServer')->with('PATH_INFO')->andReturn('/hello/say/ore');
        $object = new Pux($request);
        
        $test = $object->getRoute();
        $expected = ['Hello', 'actionSay', ['ore', null, null]];
        $this->assertEquals($expected, $test);
    }

}
